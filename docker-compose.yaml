services:
  db:
    image: postgres:17
    container_name: shortly_db
    env_file:
      - .env
    expose:
      - ${POSTGRES_PORT}
    volumes:
      - shortly_db_volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 3s
      retries: 3

  migrate:
    image: migrate/migrate
    container_name: migrations
    depends_on:
      - db
    env_file:
      - .env
    volumes:
      - ./conf/migrations:/migrations
    entrypoint: >
      sh -c "
      echo 'executing migrations';
      migrate -path=/migrations -database=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable up
      "

  cache:
    image: valkey/valkey
    container_name: shortly_cache
    env_file:
      - .env
    entrypoint: >
      sh -c '
      echo "port ${VALKEY_PORT}" > valkey.conf &&
      echo "requirepass \"${VALKEY_PASSWORD}\"" >> valkey.conf &&
      echo "user ${VALKEY_USERNAME} on allcommands allkeys >\"${VALKEY_PASSWORD}\"" >> valkey.conf &&
      exec valkey-server valkey.conf'
    restart: always
    expose:
      - ${VALKEY_PORT}

  gateway:
    image: krakend
    container_name: krakend
    ports:
      - ${KRAKEND_GATEWAY_PORT}:${KRAKEND_GATEWAY_PORT}
    volumes:
      - ./conf/krakend:/etc/krakend
    depends_on:
      - shortener_svc
      - redirect_svc
    restart: always

  shortener_svc:
    build: ./src/shortener_svc
    container_name: ${URL_SHORTENER_SVC_HOST}
      - .env
    depends_on:
      migrate:
        condition:
          service_completed_successfully
    expose:
      - ${URL_SHORTENER_SVC_PORT}
      - ${URL_SHORTENER_SVC_GRPC_PORT}

  redirect_svc:
    build: ./src/redirect_svc
    container_name: ${REDIRECT_SVC_HOST}
    env_file:
     - .env
    depends_on:
     cache:
       condition:
         service_completed_successfully
    ports:
     ${REDIRECT_SVC_PORT}:${REDIRECT_SVC_PORT}

volumes:
  shortly_db_volume:
